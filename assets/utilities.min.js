"use strict";
window.PXUTheme.contentCreator.accordion = {
    init: function() {
        const t = $(".accordion > dt > a, [data-cc-accordion] > dt > a");
        $(".accordion > dd, [data-cc-accordion] > dd").attr("aria-hidden", !0), t.attr("aria-expanded", !1), t.on("click", function() {
            let e = "false" === $(this).attr("aria-expanded");
            return $(this).attr("aria-expanded", e), $(this).parent().next().attr("aria-hidden", !e), !1
        }), t.on("keydown", function(t) {
            13 === (t.keyCode || e.which) && $(this).trigger("activate")
        })
    },
    unload: function() {
        $(".accordion > dt > a, [data-cc-accordion] > dt > a").off("click activate"), $(".accordion > dt > a, [data-cc-accordion] > dt > a").off("keydown")
    }
}, window.PXUTheme.contentCreator.slideshow = {
    init: function() {
        $(".slider, .flexslider").find("li").unwrap(), $(".slider, .flexslider").flickity({
            pageDots: !0,
            lazyLoad: 2
        })
    }
}, window.PXUTheme.animation = {
    init: function() {
        $("[data-scroll-class]").waypoint(function() {
            const e = $(this.element).data("scroll-class");
            $(this.element).addClass("animated").addClass(e)
        }, {
            offset: "70%"
        })
    },
    slideTransition: function(e, t, o) {
        e.parents(".flickity-enabled").find(".animated").removeClass("animated " + t), e.addClass("animated").addClass(t)
    },
    unload: function(e) {
        e.data("scroll-class", "")
    }
};
const deferred = {};

function floatToString(e, t) {
    var o = e.toFixed(t).toString();
    return o.match(/^\.\d+/) ? "0" + o : o
}
if (window.PXUTheme.asyncView = {
        load: (e, t, o = {}) => {
            let n;
            if (e in deferred) return deferred[e];
            const i = $.Deferred();
            if (deferred[e] = i, o.hash && (n = sessionStorage.getItem(e))) {
                const t = JSON.parse(n);
                if (o.hash === t.options.hash) return delete deferred[e], i.resolve(t).promise()
            }
            return $.ajax({
                url: e,
                cache: !1,
                data: `view=${t}`,
                dataType: "html",
                headers: {
                    "cache-control": "no-cache"
                },
                success: t => {
                    const n = document.createElement("div");
                    n.innerHTML = t;
                    const a = JSON.parse(n.querySelector("[data-options]").innerHTML),
                        s = n.querySelectorAll("[data-html]");
                    let r = {};
                    if (1 === s.length && "" === s[0].getAttribute("data-html")) r = s[0].innerHTML;
                    else
                        for (let e = 0; e < s.length; e++) r[s[e].getAttribute("data-html")] = s[e].innerHTML;
                    if (o.hash) try {
                        sessionStorage.setItem(e, JSON.stringify({
                            options: a,
                            html: r
                        }))
                    } catch (e) {
                        console.error(e)
                    }
                    return delete deferred[e], i.resolve({
                        options: a,
                        html: r
                    })
                },
                error: () => (delete deferred[e], i.reject())
            }), i.promise()
        }
    }, window.PXUTheme.addImageDimension = function(e, t) {
        var o = e.lastIndexOf(".");
        return e.substring(0, o) + t + e.substring(o)
    }, window.PXUTheme.breadcrumbs = {
        init: function(e) {
            if (e > 1) {
                const e = document.querySelector("[data-breadcrumb-text]"),
                    t = document.querySelector(".paginate").dataset.currentPage ? document.querySelector(".paginate").dataset.currentPage : 1,
                    o = document.querySelector(".paginate").dataset.paginatePages;
                document.querySelector(".js-breadcrumb-text").classList.remove("is-hidden"), e.innerHTML = `${window.PXUTheme.translation.page_text} ${t} ${window.PXUTheme.translation.of_text} ${o}`
            }
        },
        unload: function(e) {
            document.querySelector(".js-breadcrumb-text").classList.add("is-hidden")
        }
    }, window.PXUTheme.disclosure = {
        enable: function() {
            const e = $("[data-disclosure]"),
                t = $("[data-disclosure-toggle]"),
                o = $(".disclosure__list-wrap"),
                n = $("[data-disclosure-list]");

            function i(e) {
                e.siblings(".disclosure__list-wrap").is(":off-right") && e.siblings(".disclosure__list-wrap").addClass("disclosure--left")
            }

            function a(e, n) {
                !0 === e ? (t.not(n).removeClass("is-clicked"), t.not(n).attr("aria-expanded", "false")) : (t.removeClass("is-clicked"), t.attr("aria-expanded", "false")), o.removeClass("disclosure--left")
            }
            $("body").on("keyup", function(e) {
                "27" == e.which && a()
            }), e.on("mouseleave", function(e) {
                a()
            }), e.find(".disclosure-list__item:last-child").on("focusout", function(e) {
                a()
            }), t.on("mouseenter focus", function(e) {
                a(!0, this);
                const t = $(e.currentTarget);
                t.attr("aria-expanded", "true").addClass("is-clicked"), i(t)
            }), n.on("touchstart", function(e) {
                const t = $(e.currentTarget);
                t.parents(".disclosure").addClass("is-clicked"), a(!0, this), 0 == t.hasClass("is-clicked") ? (t.attr("aria-expanded", "true").addClass("is-clicked"), i(t)) : (t.attr("aria-expanded", "false").removeClass("is-clicked"), o.removeClass("disclosure--left"))
            }), n.on("focusout", function(e) {
                a(!0, this)
            }), n.on("change", function(e) {
                if (window.PXUTheme.media_queries.medium.matches || !/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                    const t = $(e.currentTarget),
                        o = e.currentTarget.value,
                        n = t.parents(".selectors-form__item").find("[data-disclosure-input]"),
                        i = t.parents(".selectors-form");
                    t.hasClass("custom-currency") ? t.trigger("click") : (n.val(o), i.submit())
                }
            })
        },
        unload: function() {
            $("[data-disclosure]").off(), $("[data-disclosure-toggle]").off(), $(".disclosure__list-wrap").off()
        }
    }, window.PXUTheme.dropdownMenu = function() {
        const e = $(".navbar-link"),
            t = $(".navbar-dropdown"),
            o = $(".has-mega-menu");
        e.each(function(e, t) {
            let o = !1;
            $(t).on("keydown", function(e) {
                13 === e.which && (!1 === o && e.preventDefault(), $(this).closest(".navbar-item").addClass("show-dropdown"), o = !0)
            }), $(t).closest(".navbar-item").on("focusout", function(e) {
                0 === $(this).find(e.relatedTarget).length && $(t).closest(".navbar-item").removeClass("show-dropdown")
            })
        }), t.each(function(e, t) {
            let o = !1;
            $(t).on("keydown", function(e) {
                13 === e.which && (!1 === o && e.preventDefault(), $(this).find(".has-submenu").length > 0 && $(this).addClass("show-nested-dropdown"), o = !0)
            })
        }), o.each(function(e, t) {
            let o = !1;
            $(t).on("keydown", function(e) {
                13 === e.which && (!1 === o && e.preventDefault(), $(this).find(".mega-menu").addClass("mega-menu--show"), o = !0)
            }), $(t).on("focusout", function(e) {
                0 === $(t).find(e.relatedTarget).length && $(t).find(".mega-menu").removeClass("mega-menu--show")
            })
        })
    }, window.PXUTheme.newsletterAjaxForm = {
        init: function() {
            $(".newsletter-form__wrapper .contact-form").each(function() {
                const e = $(this);
                e.on("submit", function(t) {
                    "true" !== $('input[name="challenge"]', e).val() && ($.ajax({
                        type: e.attr("method"),
                        url: e.attr("action"),
                        data: e.serialize(),
                        success: function(t) {
                            e.fadeOut("slow", () => {
                                e.prev(".form__success-message").html(window.PXUTheme.translation.newsletter_form_success)
                            })
                        },
                        error: function(t) {
                            $('input[name="challenge"]', e).val("true"), e.submit()
                        }
                    }), t.preventDefault())
                })
            })
        },
        unload: function() {
            $(".newsletter-form__wrapper .contact-form").find(":submit").off()
        }
    }, window.PXUTheme.getSectionData = function(e) {
        const t = e.attr("id").replace("shopify-section-", "");
        var o = e.find("[data-section-data][data-section-id=" + t + "]").first();
        if (!o) return {};
        var n = o.data("section-data") || o.html();
        try {
            return JSON.parse(n)
        } catch (e) {
            return console.warn(`Sections: invalid section data found. ${e.message}`), {}
        }
    }, window.PXUTheme.infiniteScroll = {
        init: function() {
            this.defaults = {
                grid: "[data-load-more--grid]",
                gridItems: "[data-load-more--grid-item]"
            }, $("body").on("click", "[data-load-more]", function(e) {
                e.preventDefault();
                const t = $(this),
                    o = t.attr("href");
                window.PXUTheme.infiniteScroll.loadNextPage(o, t)
            }), $("body").on("click", "[data-load-more-infinite]", function(e) {
                return window.PXUTheme.infiniteScroll.enableInfinite(), $(this).remove(), e.stopPropagation(), !1
            }), $("[data-load-infinite-scroll]").length && window.PXUTheme.infiniteScroll.enableInfinite()
        },
        loadNextPage: function(e, t) {
            $.ajax({
                type: "GET",
                dataType: "html",
                url: e,
                beforeSend: function() {
                    t.addClass("is-loading")
                },
                success: e => {
                    t.removeClass("is-loading");
                    const o = $(e).find(this.defaults.gridItems),
                        n = $(e).find("[data-load-more]").attr("href");
                    $("[data-load-more]").attr("href", n), $(this.defaults.grid).first().append(o), window.PXUTheme.productReviews.init(), void 0 === n && $("[data-load-more]").addClass("is-hidden")
                },
                error: function(e, t, o) {
                    console.log(e), console.log(t), console.log(o), location.replace(location.protocol + "//" + location.host + filterURL)
                }
            })
        },
        enableInfinite: function() {
            new Waypoint.Infinite({
                element: $(this.defaults.grid)[0],
                items: "[data-load-more--grid-item]",
                more: "[data-load-infinite]",
                loadingClass: "loading-in-progress",
                onBeforePageLoad: function() {
                    $("[data-load-infinite]").removeClass("is-hidden")
                },
                onAfterPageLoad: function(e) {
                    window.PXUTheme.productReviews.init()
                }
            })
        },
        unload: function() {
            $("[data-load-more]").off(), $("[data-load-infinite]").off()
        }
    }, window.PXUTheme.flickityIosFix = function() {
        var e, t = !1;
        document.body.addEventListener("touchstart", function(o) {
            o.target.closest(".flickity-slider") ? (t = !0, e = {
                x: o.touches[0].pageX,
                y: o.touches[0].pageY
            }) : t = !1
        }), document.body.addEventListener("touchmove", function(o) {
            if (t && o.cancelable) {
                var n = {
                    x: o.touches[0].pageX - e.x,
                    y: o.touches[0].pageY - e.y
                };
                Math.abs(n.x) > 7 && o.preventDefault()
            }
        }, {
            passive: !1
        })
    }, window.PXUTheme.loadScript = function(e, t, o) {
        window.PXUTheme.theme[e] || $.ajax({
            url: t,
            dataType: "script",
            success: o,
            async: !1
        })
    }, window.PXUTheme.applyMasonry = function(e, t) {
        let o = $(".gallery-type--masonry");
        o.length > 0 && o.imagesLoaded().progress(function() {
            o.isotope({
                layoutMode: "masonry",
                itemSelector: e,
                percentPosition: !0,
                masonry: {
                    columnWidth: e,
                    gutter: t
                }
            })
        })
    }, window.PXUTheme.applyHorizontalMasonry = function() {
        $(".gallery-type--horizontal-masonry").find(".gallery__item").each(function(e) {
            var t, o, n = $(this);
            setTimeout(function() {
                t = n.find("img").width(), o = n.find("img").height(), n.css("flex-basis", 200 * t / o), n.css("flex-grow", 200 * t / o), n.find("i").css("padding-bottom", o / t * 100 + "%")
            }, 100)
        })
    }, window.PXUTheme.mobileMenu = {
        init: function() {
            this.$mobileMenuToggle = $("[data-show-mobile-menu]"), this.$mobileMenuIcon = $(".mobile-menu__toggle-icon"), this.$mobileDropDownToggle = $(".mobile-menu .close-dropdown"), $("body").on("click", '[data-show-mobile-menu="false"]', function() {
                window.PXUTheme.mobileMenu.open()
            }), $("body").on("click", '[data-show-mobile-menu="true"]', function() {
                window.PXUTheme.mobileMenu.close()
            }), !0 === window.PXUTheme.jsHeader.enable_sticky && this.enableSticky()
        },
        open: function() {
            let e = window.scrollY;
            $("body").attr("data-current-position", e);
            let t = 0,
                o = parseInt($(".mobile-header").height());
            void 0 !== window.PXUTheme.jsAnnouncementBar && window.PXUTheme.jsAnnouncementBar.enable_sticky && (t = window.PXUTheme.jsAnnouncementBar.getAnnouncementHeight()), $(".mobile-menu").css({
                height: `calc(100vh - ${o+t}px)`
            }), $(".mobile-menu__content").css({
                marginBottom: `${o+t}px`
            }), this.$mobileMenuIcon.addClass("is-active"), $("[data-show-mobile-menu]").attr("data-show-mobile-menu", !0), void 0 !== window.PXUTheme.jsAjaxCart && (window.PXUTheme.jsAjaxCart.hideMiniCart(), window.PXUTheme.jsAjaxCart.hideDrawer()), setTimeout(function() {
                $("body").addClass("mobile-menu--opened")
            }, 10)
        },
        close: function() {
            $("body").removeClass("mobile-menu--opened");
            let e = $("body").data("current-position");
            window.scrollTo(0, e), this.$mobileMenuIcon.removeClass("is-active"), $("[data-show-mobile-menu]").attr("data-show-mobile-menu", !1)
        },
        enableSticky: function() {
            window.PXUTheme.jsHeader.disableSticky();
            let e = $("#mobile-header"),
                t = 0;
            void 0 !== window.PXUTheme.jsAnnouncementBar && window.PXUTheme.jsAnnouncementBar.enable_sticky && (t = window.PXUTheme.jsAnnouncementBar.getAnnouncementHeight()), e.addClass("sticky--enabled"), e.sticky({
                wrapperClassName: "header-sticky-wrapper",
                zIndex: 40,
                topSpacing: t
            }).on("sticky-start", () => {
                var t = $("#mobile-header").height() + $(".announcement-sticky-wrapper").height();
                e.parent().parent().find(".search-overlay").addClass("sticky-search").css("top", t + "px")
            }).on("sticky-end", () => {
                e.parent().parent().find(".search-overlay").removeClass("sticky-search").css("top", "100%"), setTimeout(() => {
                    e.sticky("update")
                }, 250), e.find(".sticky-menu-wrapper").removeClass("is-visible")
            })
        },
        disableSticky: function() {
            let e = $("#mobile-header");
            e.unstick(), e.removeClass("sticky--enabled"), setTimeout(function() {
                $(".header-sticky-wrapper").css("height", "auto")
            }, 250)
        },
        unload: function(e) {
            $("[data-mobilemenu-toggle]").off(), $(".mobile-menu__toggle-icon").off(), $(".mobile-menu .close-dropdown").off(), this.disableSticky()
        }
    }, window.PXUTheme.objectFitImages = {
        init: function() {
            objectFitImages(), "color" == window.PXUTheme.theme_settings.image_loading_style && this.calculateAspectRatio()
        },
        calculateAspectRatio: function() {
            const e = document.querySelectorAll("[data-calculate-aspect-ratio]");
            for (let t = 0; t < e.length; t++) {
                const o = e[t].firstElementChild,
                    n = o.getAttribute("width") / o.getAttribute("height"),
                    i = o.height * n;
                e[t].style.maxWidth = `${Math.floor(i)}px`
            }
            document.addEventListener("lazyloaded", function(e) {
                e.srcElement.parentNode.style.background = "none"
            })
        },
        unload: function() {}
    }, void 0 === Shopify) var Shopify = {};
if (Shopify.each = function(e, t) {
        for (var o = 0; o < e.length; o++) t(e[o], o)
    }, Shopify.map = function(e, t) {
        for (var o = [], n = 0; n < e.length; n++) o.push(t(e[n], n));
        return o
    }, Shopify.arrayIncludes = function(e, t) {
        for (var o = 0; o < e.length; o++)
            if (e[o] == t) return !0;
        return !1
    }, Shopify.uniq = function(e) {
        for (var t = [], o = 0; o < e.length; o++) Shopify.arrayIncludes(t, e[o]) || t.push(e[o]);
        return t
    }, Shopify.isDefined = function(e) {
        return void 0 !== e
    }, Shopify.getClass = function(e) {
        return Object.prototype.toString.call(e).slice(8, -1)
    }, Shopify.extend = function(e, t) {
        function o() {}
        o.prototype = t.prototype, e.prototype = new o, e.prototype.constructor = e, e.baseConstructor = t, e.superClass = t.prototype
    }, Shopify.locationSearch = function() {
        return window.location.search
    }, Shopify.locationHash = function() {
        return window.location.hash
    }, Shopify.replaceState = function(e) {
        window.history.replaceState({}, document.title, e)
    }, Shopify.urlParam = function(e) {
        var t = RegExp("[?&]" + e + "=([^&#]*)").exec(Shopify.locationSearch());
        return t && decodeURIComponent(t[1].replace(/\+/g, " "))
    }, Shopify.newState = function(e, t) {
        return (Shopify.urlParam(e) ? Shopify.locationSearch().replace(RegExp("(" + e + "=)[^&#]+"), "$1" + t) : "" === Shopify.locationSearch() ? "?" + e + "=" + t : Shopify.locationSearch() + "&" + e + "=" + t) + Shopify.locationHash()
    }, Shopify.setParam = function(e, t) {
        Shopify.replaceState(Shopify.newState(e, t))
    }, Shopify.Product = function(e) {
        Shopify.isDefined(e) && this.update(e)
    }, Shopify.Product.prototype.update = function(e) {
        for (let t in e) this[t] = e[t]
    }, Shopify.Product.prototype.optionNames = function() {
        return "Array" == Shopify.getClass(this.options) ? this.options : []
    }, Shopify.Product.prototype.optionValues = function(e) {
        if (!Shopify.isDefined(this.variants)) return null;
        var t = Shopify.map(this.variants, function(t) {
            var o = "option" + (e + 1);
            return null == t[o] ? null : t[o]
        });
        return null == t[0] ? null : Shopify.uniq(t)
    }, Shopify.Product.prototype.getVariant = function(e) {
        var t = null;
        return e.length != this.options.length ? t : (Shopify.each(this.variants, function(o) {
            for (var n = !0, i = 0; i < e.length; i++) {
                o["option" + (i + 1)] != e[i] && (n = !1)
            }
            return 1 == n ? void(t = o) : void 0
        }), t)
    }, Shopify.Product.prototype.getVariantById = function(e) {
        for (var t = 0; t < this.variants.length; t++) {
            var o = this.variants[t];
            if (e == o.id) return o
        }
        return null
    }, Shopify.money_format = "${{amount}}", Shopify.formatMoney = function(e, t) {
        function o(e, t) {
            return void 0 === e ? t : e
        }

        function n(e, t, n, i) {
            if (t = o(t, 2), n = o(n, ","), i = o(i, "."), isNaN(e) || null == e) return 0;
            var a = (e = (e / 100).toFixed(t)).split(".");
            return a[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1" + n) + (a[1] ? i + a[1] : "")
        }
        "string" == typeof e && (e = e.replace(".", ""));
        var i = "",
            a = /\{\{\s*(\w+)\s*\}\}/,
            s = t || this.money_format;
        switch (s.match(a)[1]) {
            case "amount":
                i = n(e, 2);
                break;
            case "amount_no_decimals":
                i = n(e, 0);
                break;
            case "amount_with_comma_separator":
                i = n(e, 2, ".", ",");
                break;
            case "amount_with_apostrophe_separator":
                i = n(e, 2);
                break;
            case "amount_no_decimals_with_comma_separator":
                i = n(e, 0, ".", ",");
                break;
            case "amount_no_decimals_with_space_separator":
                i = n(e, 0, ".", " ")
        }
        return s.replace(a, i)
    }, Shopify.OptionSelectors = function(e, t) {
        return this.selectorDivClass = "selector-wrapper", this.selectorClass = "single-option-selector", this.variantIdFieldIdSuffix = "-variant-id", this.variantIdField = null, this.historyState = null, this.selectors = [], this.domIdPrefix = e, this.product = new Shopify.Product(t.product), this.onVariantSelected = Shopify.isDefined(t.onVariantSelected) ? t.onVariantSelected : function() {}, this.replaceSelector(e), this.initDropdown(), t.enableHistoryState && (this.historyState = new Shopify.OptionSelectors.HistoryState(this)), !0
    }, Shopify.OptionSelectors.prototype.initDropdown = function() {
        var e = {
            initialLoad: !0
        };
        if (!this.selectVariantFromDropdown(e)) {
            var t = this;
            setTimeout(function() {
                t.selectVariantFromParams(e) || t.fireOnChangeForFirstDropdown.call(t, e)
            })
        }
    }, Shopify.OptionSelectors.prototype.fireOnChangeForFirstDropdown = function(e) {
        this.selectors[0].element.onchange(e)
    }, Shopify.OptionSelectors.prototype.selectVariantFromParamsOrDropdown = function(e) {
        this.selectVariantFromParams(e) || this.selectVariantFromDropdown(e)
    }, Shopify.OptionSelectors.prototype.replaceSelector = function(e) {
        var t = document.getElementById(e),
            o = t.parentNode;
        Shopify.each(this.buildSelectors(), function(e) {
            o.insertBefore(e, t)
        }), t.style.display = "none", this.variantIdField = t
    }, Shopify.OptionSelectors.prototype.selectVariantFromDropdown = function(e) {
        var t = document.getElementById(this.domIdPrefix).querySelector("[selected]");
        if (t || (t = document.getElementById(this.domIdPrefix).querySelector('[selected="selected"]')), !t) return !1;
        var o = t.value;
        return this.selectVariant(o, e)
    }, Shopify.OptionSelectors.prototype.selectVariantFromParams = function(e) {
        var t = Shopify.urlParam("variant");
        return this.selectVariant(t, e)
    }, Shopify.OptionSelectors.prototype.selectVariant = function(e, t) {
        var o = this.product.getVariantById(e);
        if (null == o) return !1;
        for (var n = 0; n < this.selectors.length; n++) {
            var i = this.selectors[n].element,
                a = o[i.getAttribute("data-option")];
            null != a && this.optionExistInSelect(i, a) && (i.value = a)
        }
        return "undefined" != typeof jQuery ? jQuery(this.selectors[0].element).trigger("change", t) : this.selectors[0].element.onchange(t), !0
    }, Shopify.OptionSelectors.prototype.optionExistInSelect = function(e, t) {
        for (var o = 0; o < e.options.length; o++)
            if (e.options[o].value == t) return !0
    }, Shopify.OptionSelectors.prototype.insertSelectors = function(e, t) {
        Shopify.isDefined(t) && this.setMessageElement(t), this.domIdPrefix = "product-" + this.product.id + "-variant-selector";
        var o = document.getElementById(e);
        Shopify.each(this.buildSelectors(), function(e) {
            o.appendChild(e)
        })
    }, Shopify.OptionSelectors.prototype.buildSelectors = function() {
        for (var e = 0; e < this.product.optionNames().length; e++) {
            var t = new Shopify.SingleOptionSelector(this, e, this.product.optionNames()[e], this.product.optionValues(e));
            t.element.disabled = !1, this.selectors.push(t)
        }
        var o = this.selectorDivClass,
            n = this.product.optionNames();
        return Shopify.map(this.selectors, function(e) {
            var t = document.createElement("div");
            if (t.setAttribute("class", o), n.length > 1) {
                var i = document.createElement("label");
                i.htmlFor = e.element.id, i.innerHTML = e.name, t.appendChild(i)
            }
            return t.appendChild(e.element), t
        })
    }, Shopify.OptionSelectors.prototype.selectedValues = function() {
        for (var e = [], t = 0; t < this.selectors.length; t++) {
            var o = this.selectors[t].element.value;
            e.push(o)
        }
        return e
    }, Shopify.OptionSelectors.prototype.updateSelectors = function(e, t) {
        var o = this.selectedValues(),
            n = this.product.getVariant(o);
        n ? (this.variantIdField.disabled = !1, this.variantIdField.value = n.id) : this.variantIdField.disabled = !0, this.onVariantSelected(n, this, t), null != this.historyState && this.historyState.onVariantChange(n, this, t)
    }, Shopify.OptionSelectorsFromDOM = function(e, t) {
        var o = t.optionNames || [],
            n = t.priceFieldExists || !0,
            i = t.delimiter || "/",
            a = this.createProductFromSelector(e, o, n, i);
        t.product = a, Shopify.OptionSelectorsFromDOM.baseConstructor.call(this, e, t)
    }, Shopify.extend(Shopify.OptionSelectorsFromDOM, Shopify.OptionSelectors), Shopify.OptionSelectorsFromDOM.prototype.createProductFromSelector = function(e, t, o, n) {
        if (!Shopify.isDefined(o)) o = !0;
        if (!Shopify.isDefined(n)) n = "/";
        var i = document.getElementById(e),
            a = i.childNodes,
            s = (i.parentNode, t.length),
            r = [];
        Shopify.each(a, function(e, i) {
            if (1 == e.nodeType && "option" == e.tagName.toLowerCase()) {
                var a = e.innerHTML.split(new RegExp("\\s*\\" + n + "\\s*"));
                0 == t.length && (s = a.length - (o ? 1 : 0));
                var l = a.slice(0, s),
                    d = o ? a[s] : "",
                    c = (e.getAttribute("value"), {
                        available: !e.disabled,
                        id: parseFloat(e.value),
                        price: d,
                        option1: l[0],
                        option2: l[1],
                        option3: l[2]
                    });
                r.push(c)
            }
        });
        var l = {
            variants: r
        };
        if (0 == t.length) {
            l.options = [];
            for (var d = 0; s > d; d++) l.options[d] = "option " + (d + 1)
        } else l.options = t;
        return l
    }, Shopify.SingleOptionSelector = function(e, t, o, n) {
        this.multiSelector = e, this.values = n, this.index = t, this.name = o, this.element = document.createElement("select");
        for (var i = 0; i < n.length; i++) {
            var a = document.createElement("option");
            a.value = n[i], a.innerHTML = n[i], this.element.appendChild(a)
        }
        return this.element.setAttribute("class", this.multiSelector.selectorClass), this.element.setAttribute("data-option", "option" + (t + 1)), this.element.id = e.domIdPrefix + "-option-" + t, this.element.onchange = function(o, n) {
            n = n || {}, e.updateSelectors(t, n)
        }, !0
    }, Shopify.Image = {
        preload: function(e, t) {
            for (var o = 0; o < e.length; o++) {
                var n = e[o];
                this.loadImage(this.getSizedImageUrl(n, t))
            }
        },
        loadImage: function(e) {
            (new Image).src = e
        },
        switchImage: function(e, t, o) {
            if (e && t) {
                var n = this.imageSize(t.src),
                    i = this.getSizedImageUrl(e.src, n);
                o ? o(i, e, t) : t.src = i
            }
        },
        imageSize: function(e) {
            var t = e.match(/_(1024x1024|2048x2048|pico|icon|thumb|small|compact|medium|large|grande)\./);
            return null != t ? t[1] : null
        },
        getSizedImageUrl: function(e, t) {
            if (null == t) return e;
            if ("master" == t) return this.removeProtocol(e);
            var o = e.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?$/i);
            if (null != o) {
                var n = e.split(o[0]),
                    i = o[0];
                return this.removeProtocol(n[0] + "_" + t + i)
            }
            return null
        },
        removeProtocol: function(e) {
            return e.replace(/http(s)?:/, "")
        }
    }, Shopify.OptionSelectors.HistoryState = function(e) {
        this.browserSupports() && this.register(e)
    }, Shopify.OptionSelectors.HistoryState.prototype.register = function(e) {
        window.addEventListener("popstate", function(t) {
            e.selectVariantFromParamsOrDropdown({
                popStateCall: !0
            })
        })
    }, Shopify.OptionSelectors.HistoryState.prototype.onVariantChange = function(e, t, o) {
        this.browserSupports() && (!e || o.initialLoad || o.popStateCall || Shopify.setParam("variant", e.id))
    }, Shopify.OptionSelectors.HistoryState.prototype.browserSupports = function() {
        return window.history && window.history.replaceState
    }, window.PXUTheme.productMedia = {
        models: [],
        setupMedia: function() {
            const e = {
                controls: ["zoom-in", "zoom-out", "fullscreen"],
                focusOnPlay: !1
            };
            $("model-viewer").each(function(t, o) {
                o = new Shopify.ModelViewerUI(o, e), window.PXUTheme.productMedia.models.push(o)
            }), $(".product-gallery__model model-viewer").on("mousedown", function() {
                window.PXUTheme.productMedia.hideModelIcon(this)
            })
        },
        showModelIcon: function(e) {
            $(e).find(".button--poster, .model-icon-button-control").show()
        },
        hideModelIcon: function(e) {
            $(e).find(".button--poster, .model-icon-button-control").hide()
        }
    }, window.PXUTheme.productReviews = {
        init: function() {
            ($("#shopify-product-reviews").length || $(".shopify-product-reviews-badge").length) && SPR.setTimeout(function() {
                return SPR.registerCallbacks(), SPR.initRatingHandler(), SPR.initDomEls(), SPR.loadProducts(), SPR.loadBadges()
            })
        },
        productReviewScroll: function() {
            $("#shopify-product-reviews").length && $(".shopify-product-reviews-badge").length && $(".spr-badge-container").on("click", function() {
                window.PXUTheme.scrollToTop("#shopify-product-reviews")
            })
        },
        unload: function() {
            $(".spr-badge-container").off()
        }
    }, window.PXUTheme.quantityBox = {
        init: function() {
            $("body").on("click", "[data-update-quantity]:not([disabled])", function() {
                window.PXUTheme.quantityBox.updateQuantity($(this))
            }), $("body").on("keyup keydown change", ".quantity-input", function() {
                window.PXUTheme.quantityBox.updateQuantity($(this))
            })
        },
        updateQuantityControls: function(e) {
            const t = e.parents(".product-quantity-box"),
                o = $(".quantity-input", t);
            let n = parseInt(o.val()),
                i = 1e17;
            null != o.attr("max") && (i = o.attr("max")), 1 === n || 0 === n ? ($(".quantity-minus", t).attr("disabled", !0), $(".quantity-plus", t).attr("disabled", !1)) : n >= i ? ($(".quantity-plus", t).attr("disabled", !0), $(".quantity-minus", t).attr("disabled", !1), o.val(i)) : ($(".quantity-minus", t).attr("disabled", !1), $(".quantity-plus", t).attr("disabled", !1))
        },
        updateQuantity: function(e) {
            const t = e.parents(".product-quantity-box"),
                o = $(".quantity-input", t);
            t.parents("[data-line-item]").data("line-item");
            let n = parseInt(o.val()),
                i = 1e17,
                a = o.attr("min") || 0;
            if (null != o.attr("max") && (i = o.attr("max")), n < a) return o.val(a), !1;
            if (n > i) return o.val(i), !1;
            if ("plus" === e.data("update-quantity") ? n < i && (n++, o.val(n)) : "minus" === e.data("update-quantity") && n > a && (n--, o.val(n)), e.parents("[data-line-item]").length) {
                const e = t.data("line-item-key");
                window.PXUTheme.quantityBox.updateCart(e, n)
            }
            window.PXUTheme.quantityBox.updateQuantityControls(e)
        },
        updateCart: function(lineID, quantity) {
            $(".quantity-warning").removeClass("animated bounceIn"), $.ajax({
                type: "POST",
                url: "/cart/change.js",
                data: `quantity=${quantity}&line=${lineID}`,
                dataType: "json",
                success: function(e) {
                    let t = 0,
                        o = "",
                        n = $(`[data-line-item="${lineID}"]`).find(".quantity-warning"),
                        i = $(`[data-line-item="${lineID}"]`).find(".product-quantity-box"),
                        a = $(".cart__form").data("currentDiscount");
                    const s = lineID - 1;
                    void 0 !== e.items[s] && (t = e.items[s].quantity);
                    for (let o = 0; o < e.items.length; o++) o != s && e.items[o].id == e.items[s].id && (t += e.items[o].quantity);
                    quantity > 0 && quantity != t && e.total_discount <= a && (1 == t ? (o = window.PXUTheme.translation.product_count_one, n.text(`${t} ${o}`), $(".quantity-minus", i).attr("disabled", !0)) : (o = window.PXUTheme.translation.product_count_other, n.text(`${t} ${o}`))), $(".cart__form").data("currentDiscount", e.total_discount), n.addClass("animated bounceIn"), void 0 !== window.PXUTheme.jsAjaxCart && window.PXUTheme.jsAjaxCart.updateView(),window.PXUTheme.jsAjaxCart.initializeAjaxCart(), window.PXUTheme.jsCart && window.PXUTheme.jsCart.updateView(e, lineID)
                },
                error: function(XMLHttpRequest, textStatus) {
                    var response = eval("(" + XMLHttpRequest.responseText + ")");
                    response = response.description
                }
            })
        },
        unload: function(e) {
            $(".quantity-input").off(), $("[data-update-quantity]").off()
        }
    }, window.PXUTheme.queryParameters = {}, location.search.length)
    for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split("&"); i < aCouples.length; i++) aKeyValue = aCouples[i].split("="), aKeyValue.length > 1 && (window.PXUTheme.queryParameters[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]));

function selectCallback(e, t, o, n) {
    const i = $(e),
        a = $(".product__notify-form", i),
        s = $(".product_form, .shopify-product-form", i),
        r = s.data("variant-inventory"),
        l = s.find(".quantity-input"),
        d = $(".notify_form__inputs"),
        c = window.PXUTheme.translation.notify_form_email,
        u = window.PXUTheme.translation.contact_email,
        p = window.PXUTheme.translation.notify_form_send,
        h = d.data("url");
    let m = "",
        f = "";
    if (o) {
        if (null != o.title) {
            const e = o.title.replace(/"/g, "&quot;");
            m = `${window.PXUTheme.translation.email_content}${e} | ${h}?variant=${o.id}`
        }
    } else m = `${window.PXUTheme.translation.email_content} | ${h}`;
    const y = `\n    <input type="hidden" name="challenge" value="false" />\n    <input type="hidden" name="contact[body]" class="notify_form_message" data-body="${m}" value="${m}" />\n    <div class="field has-addons">\n      <div class="control">\n        ${f=d.hasClass("customer--true")?`<input required type="email" class="notify_email input" name="contact[email]" id="contact[email]" placeholder="${c}" value="${window.PXUTheme.translation.customer_email}" />`:`<input required type="email" class="notify_email input" name="contact[email]" id="contact[email]" placeholder="${c}" value="${u}" />`}\n      </div>\n      <div class="control">\n        <input class="action_button button" type="submit" value="${p}" />\n      </div>\n    </div>`;
    if (o && o.featured_image && i.is(":visible")) {
        $(".product-gallery__main, .js-gallery-modal", i).each((e, t) => {
            const n = $(t),
                i = window.Flickity.data(t),
                a = $(`img[data-image-id=${o.featured_media.id}]`).data("index");
            n.is(":visible") && void 0 !== i && i.select(a, !1, !0)
        })
    }
    if (s.find("[data-variant-selector]").trigger("selectedVariantChanged"), $(".cart-warning", i).text(""), o && ($(".sku", i).text(o.sku), $(".notify_form_message", i).attr("value", `${$(".notify_form_message",i).data("body")} - ${o.title}`)), o && o.available) {
        const e = {
            ...o,
            ...r && r.find(e => e.id === o.id) || {}
        };
        if (e.inventory_management && e.inventory_quantity > 0) {
            if (window.PXUTheme.theme_settings.display_inventory_left) {
                let t = window.PXUTheme.translation.product_count_other;
                1 === e.inventory_quantity && (t = window.PXUTheme.translation.product_count_one);
                const o = window.PXUTheme.theme_settings.inventory_threshold;
                e.inventory_quantity <= o ? $(".items_left", i).html(`${e.inventory_quantity} ${t}`) : $(".items_left", i).html("")
            }
            "deny" === e.inventory_policy && ($("[data-max-inventory-management]", i).attr("max", e.inventory_quantity), window.PXUTheme.quantityBox.updateQuantityControls(l))
        } else $(".items_left", i).text(""), $("[data-max-inventory-management]", i).removeAttr("max");
        $(".sold_out", i).text(""), $("[data-add-to-cart-trigger]", i).removeClass("disabled").removeAttr("disabled").attr("data-options-unselected", null).find("span:not(.icon)").text($("[data-add-to-cart-trigger]", i).data("label")), Shopify.PaymentButton && Shopify.PaymentButton.init(), $(".shopify-payment-button", i).show(), $(".purchase-details__quantity", i).show(), a.hide(), d.empty(), d.append(y), window.PXUTheme.currencyConverter && window.PXUTheme.currencyConverter.convertCurrencies()
    } else {
        const e = o ? window.PXUTheme.translation.soldOut : window.PXUTheme.translation.unavailable;
        $(".items_left", i).text(""), $("[data-max-inventory-management]", i).removeAttr("max"), $(".sold_out", i).text(e), "not-selected" === n ? $("[data-add-to-cart-trigger]", i).removeClass("disabled").removeAttr("disabled").attr("data-options-unselected", "").find("span:not(.icon)").text($("[data-add-to-cart-trigger]", i).data("label")) : $("[data-add-to-cart-trigger]", i).addClass("disabled").attr("disabled", "disabled").attr("data-options-unselected", null).find("span:not(.icon)").text(e), $(".shopify-payment-button", i).hide(), $(".purchase-details__quantity", i).hide(), a.hide(), d.empty(), o && !o.available && (a.fadeIn(), d.empty(), d.append(y))
    }
}

function isScreenSizeLarge() {
    if (window.PXUTheme.media_queries.large.matches) return !0
}
window.PXUTheme.responsiveVideo = {
    init: function() {
        $('iframe[src*="youtube.com"], iframe[src*="vimeo.com"]').each(function(e, t) {
            var o = $(t);
            o.parents(".plyr__video-wrapper").length || o.parents(".lazyframe").length || o.wrap('<div class="lazyframe" data-ratio="16:9"></div>')
        })
    }
}, window.selectCallback = selectCallback, window.PXUTheme.predictiveSearch = {
    vars: {
        term: "",
        searchPath: window.PXUTheme.routes.search_url,
        displayTimer: ""
    },
    init: function() {
        this.unload(), $("[data-show-search-trigger], [data-autocomplete-true] input").on("click touchstart", function(e) {
            if (!isScreenSizeLarge()) {
                e.stopPropagation();
                const t = $(this).closest("form").find('[name="type"]').val(),
                    o = $(document).scrollTop();
                window.PXUTheme.predictiveSearch.showMobileSearch(t, o)
            }
        }), $("[data-autocomplete-true]").on("focus", function() {
            $(this).parents("[data-autocomplete-true]").find(".search__results-wrapper").show()
        }), $(document).on("click focusout", function(e) {
            window.PXUTheme.media_queries.large.matches && (0 === $(e.target).parents(".search-form").length && $("[data-autocomplete-true] .search__results-wrapper").hide().removeClass("results-found"))
        }), $("[data-autocomplete-true] form").on("submit", function(e) {
            e.preventDefault();
            const t = $(this).find('input[name="q"]').val(),
                o = encodeURI(t);
            let n = window.PXUTheme.theme_settings.search_option;
            $(this).find('[name="type"]').length > 0 && (n = $(this).find('[name="type"]').val()), window.location.href = null == o ? window.PXUTheme.routes.search_url + "?type=" + n : window.PXUTheme.predictiveSearch.vars.searchPath + "?type=" + n + "&q=" + o + "*"
        }), $("[data-autocomplete-true] form").each(function() {
            const e = $(this),
                t = e.find('input[name="q"]'),
                o = `\n        <div class="search__results-wrapper">\n          <h2 class="vertical-search__title">\n            ${window.PXUTheme.translation.top_suggestions}\n          </h2>\n          <ul class="search__results"></ul>\n        </div>\n      `;
            $(o).appendTo(e), t.attr("autocomplete", "off").on("input", function() {
                clearTimeout(window.PXUTheme.predictiveSearch.vars.displayTimer), $(this).val().length > 3 ? (window.PXUTheme.predictiveSearch.vars.term = $(this).val(), window.PXUTheme.predictiveSearch.getResults(window.PXUTheme.predictiveSearch.vars.term, e)) : $("[data-autocomplete-true] .search__results-wrapper").hide().removeClass("results-found")
            })
        })
    },
    getResults: function(e, t) {
        let o = window.PXUTheme.theme_settings.search_option;
        t.find('[name="type"]').length > 0 && (o = t.find('[name="type"]').val()), jQuery.getJSON("/search/suggest.json", {
            q: e,
            resources: {
                type: o,
                limit: window.PXUTheme.theme_settings.search_to_display,
                options: {
                    unavailable_products: "last",
                    fields: "title,body,variants.title,variants.sku,vendor,product_type,tag"
                }
            }
        }).done(function(e) {
            const o = [e.resources.results.products, e.resources.results.pages, e.resources.results.articles];
            let n = [];
            $.each(o, function(e, t) {
                void 0 !== t && t.length > 0 && n.push(t)
            }), window.PXUTheme.predictiveSearch.vars.displayTimer = setTimeout(function() {
                window.PXUTheme.predictiveSearch.displayResults(n[0], t)
            }, 500)
        })
    },
    displayResults: function(e, t) {
        const o = t.find(".search__results-wrapper"),
            n = t.find(".search__results");
        let i = window.PXUTheme.theme_settings.search_option;
        if (o.show(), n.empty(), t.find('[name="type"]').length > 0 && (i = t.find('[name="type"]').val()), e && e.length > 0) $.each(e, function(e, t) {
            let o = $('<a tabindex="0"></a>').attr("href", t.url);
            if ("/" !== window.PXUTheme.routes.root_url && (o = $('<a tabindex="0"></a>').attr("href", window.PXUTheme.routes.root_url + t.url)), t.price) {
                function i(e) {
                    return '<span class="money">' + Shopify.formatMoney(e, $("body").data("money-format")) + "</span>"
                }
                let e;
                e = !0 === t.available ? t.compare_at_price_max > t.price_max || t.compare_at_price_min > t.price_min ? `${i(t.price)} <span class="was-price">${i(t.compare_at_price_max)}</span>` : t.price > 0 ? t.price_min != t.price_max ? `${window.PXUTheme.translation.from} ${i(t.price)}` : `${i(t.price)}` : window.PXUTheme.theme_settings.free : window.PXUTheme.translation.soldOut, t.image && o.append(`<div class="thumbnail"><img class="lazyload transition--${window.PXUTheme.theme_settings.image_loading_style}" src="${window.PXUTheme.addImageDimension(t.image,"_300x")}" /></div>`), o.append(`<div class="description"><strong>${t.title}</strong><br><span class="item-pricing price">${e}</span></div>`)
            } else t.summary_html ? ("NULL" != t.image && o.append(`<div class="thumbnail"><img class="lazyload transition--${window.PXUTheme.theme_settings.image_loading_style}" src="${window.PXUTheme.addImageDimension(t.image,"_300x")}" /></div>`), o.append(`<div class="description"><strong>${t.title}</strong><br><span class="item-description">'${t.summary_html.replace(/(<([^>]+)>)/gi,"").slice(0,25)}</span></div>`)) : t.published_at && o.append(`<div class="description"><strong>${t.title}</strong><br><span class="item-description">${t.body.replace(/(<([^>]+)>)/gi,"").slice(0,25)}</span></div>`);
            o.wrap('<li class="item-result"></li>'), n.append(o.parent()), window.PXUTheme.currencyConverter && window.PXUTheme.currencyConverter.init()
        }), n.prepend(`<li class="all-results"><span class="see-all"><a href="${this.vars.searchPath}?type=${i}&q=${this.vars.term}*"> ${window.PXUTheme.translation.all_results} ${window.PXUTheme.icons.right_caret}</a></span></li>`), n.parents(".search__results-wrapper").addClass("results-found");
        else {
            const e = `<li class="item-result"><span class="no-results">${window.PXUTheme.translation.no_results}</span></li>`;
            n.append(e), n.parents(".search__results-wrapper").removeClass("results-found")
        }
        t.parents(".vertical-header__content").length && "vertical" === window.PXUTheme.jsHeader.header_layout && window.PXUTheme.predictiveSearch.alignVerticalSearch(), n.show()
    },
    showMobileSearch: function(e, t) {
        $("body").css("max-height", window.innerHeight), $(".mobile-search").fadeIn(200), /iPad|iPhone|iPod/.test(navigator.platform) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1 ? $(".mobile-search input[data-q]").focus() : setTimeout(function() {
            $(".mobile-search input[data-q]").focus()
        }, 205), document.body.style.position = "fixed", document.body.style.top = "-" + t + "px", $(".mobile-search").css("top", t);
        const o = window.innerHeight - 46;
        $(".mobile-search .search__results-wrapper").css("max-height", o), e ? $('.mobile-search [name="type"]').val(e) : $('.mobile-search [name="type"]').val(window.PXUTheme.theme_settings.search_option), $(".search-form .close-search").on("click touchstart", function(e) {
            e.preventDefault(), e.stopPropagation(), window.PXUTheme.predictiveSearch.hideMobileSearch(t), $("[data-autocomplete-true] .search__results-wrapper").hide().removeClass("results-found")
        }), $(".search-form .submit-search").on("click touchstart", function(e) {
            $(this).parents("form").submit()
        })
    },
    hideMobileSearch: function(e) {
        $("body").css("max-height", "none"), document.body.style.position = "", document.body.style.top = "", window.scrollTo(0, e), $(".mobile-search").fadeOut(200), $('.mobile-search [name="q"]').val(""), $("body").off("focus", ".search-form .close-search"), $("body").off("focus", ".search-form .submit-search")
    },
    alignVerticalSearch: function() {
        const e = $(".header--vertical .search__results"),
            t = $(".header--vertical").innerWidth();
        e.parents(".search__results-wrapper").css({
            position: "fixed",
            left: t,
            top: "0"
        })
    },
    unload: function() {
        $("body").off("focus", "[data-autocomplete-true] input"), $('input[name="q"]').off(), $('[data-dropdown-rel="search"], [data-autocomplete-true] input').off(), $(".search__results-wrapper").remove()
    }
}, window.PXUTheme.scrollToTop = function(e, t) {
    null != t ? $("html, body").animate({
        scrollTop: $(e).offset().top - t
    }, 1e3) : $("html, body").animate({
        scrollTop: $(e).offset().top
    }, 1e3)
}, window.PXUTheme.tabs = {
    enableTabs: function() {
        let e = $(".tabs li, .tabs li a");
        e.on("click", function(t) {
            t.preventDefault(), e.removeClass("is-active active"), $(this).addClass("is-active");
            let o = $(this).index(),
                n = $(this).parents(".tabs").next(".tabs-content");
            n.children("li, li a").removeClass("is-active active"), n.children("li, li a").eq(o).addClass("is-active").show().css({
                display: "block"
            }).siblings().hide().removeClass("is-active")
        })
    },
    unload: function() {
        $(".tabs li, .tabs li a").off()
    }
};
class ProductCard {
    enableSwatches() {
        window.isScreenSizeLarge() && $("body").on("mouseenter", ".swatch span", ({
            currentTarget: e
        }) => {
            -1 === $(e).data("image").indexOf("no-image") && ($(e).parents(".thumbnail").find(".product__imageContainer img:not(.secondary)").attr("src", $(e).data("image")), $(e).parents(".thumbnail").find(".product__imageContainer img:not(.secondary)").attr("srcset", $(e).data("image")))
        })
    }
    showVariantImage() {
        window.isScreenSizeLarge() && ($("body").on("mouseenter", ".has-secondary-image-swap", ({
            currentTarget: e
        }) => {
            const t = $(e).find(".product-image__wrapper img"),
                o = $(e).find(".product-image__wrapper .video-on-hover");
            t && t.toggleClass("swap--visible"), o && (o.toggleClass("swap--visible"), window.PXUTheme.video.enableVideoOnHover($(e)))
        }), $("body").on("mouseleave", ".has-secondary-image-swap", ({
            currentTarget: e
        }) => {
            const t = $(e).find(".product-image__wrapper img"),
                o = $(e).find(".product-image__wrapper .video-on-hover");
            t && t.toggleClass("swap--visible"), o && (o.toggleClass("swap--visible"), window.PXUTheme.video.disableVideoOnHover($(e)))
        }))
    }
    showQuickShop() {
        $("body").on("click", ".js-quick-shop-link", e => {
            e.preventDefault();
            const t = $(e.currentTarget);
            window.PXUTheme.jsProductClass.load(t.data("url")).then(({
                html: e
            }) => {
                $(".js-quick-shop").html(e.content), $(".js-quick-shop .js-product_section").addClass("quickshop"), $(".fancybox-active").length || $.fancybox.open($(".js-quick-shop"), {
                    baseClass: `quick-shop__lightbox product-${t.data("id")}`,
                    hash: !1,
                    infobar: !1,
                    toolbar: !1,
                    loop: !0,
                    smallBtn: !0,
                    touch: !1,
                    video: {
                        autoStart: !1
                    },
                    mobile: {
                        preventCaptionOverlap: !1,
                        toolbar: !0
                    },
                    afterShow: (e, t) => {
                        const {
                            src: o
                        } = t, n = $(o).find(".quick-shop");
                        window.PXUTheme.jsProduct.init($(".js-quick-shop")), n.addClass("quick-shop--loaded"), n.addClass("content-loaded"), $(".quickshop .tabs").length > 0 && window.PXUTheme.tabs.enableTabs()
                    },
                    beforeClose: (e, t) => {
                        const {
                            src: o
                        } = t, n = $(o).find(".quick-shop");
                        n.removeClass("quick-shop--loaded"), n.removeClass("content-loaded")
                    }
                })
            }).catch(t => console.error(e))
        })
    }
}
window.PXUTheme.thumbnail = new ProductCard;
const videoEl = {
        playButtonIcon: '<button type="button" class="plyr__control plyr__control--overlaid" aria-label="Play, {title}" data-plyr="play"><svg class="play-icon-button-control" width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="60" height="60" fill="white"/><path fill-rule="evenodd" clip-rule="evenodd" d="M23 20V40L39 29.4248L23 20Z" fill="#323232"/></svg><span class="plyr__sr-only">Play</span></button>',
        playButton: '<button type="button" class="plyr__controls__item plyr__control" aria-label="Play, {title}" data-plyr="play"><svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg><svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg><span class="label--pressed plyr__tooltip" role="tooltip">Pause</span><span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span></button>',
        muteButton: '<button type="button" class="plyr__controls__item plyr__control" aria-label="Mute" data-plyr="mute"><svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-muted"></use></svg><svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-volume"></use></svg><span class="label--pressed plyr__tooltip" role="tooltip">Unmute</span><span class="label--not-pressed plyr__tooltip" role="tooltip">Mute</span></button>',
        progressInput: '<div class="plyr__controls__item plyr__progress__container"><div class="plyr__progress"><input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek"><progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress><span role="tooltip" class="plyr__tooltip">00:00</span></div></div>',
        volume: '<div class="plyr__controls__item plyr__volume"><input data-plyr="volume" type="range" min="0" max="1" step="0.05" value="1" autocomplete="off" aria-label="Volume"></div>',
        fullscreen: '<button type="button" class="plyr__controls__item plyr__control" data-plyr="fullscreen"><svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-exit-fullscreen"></use></svg><svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-enter-fullscreen"></use></svg><span class="label--pressed plyr__tooltip" role="tooltip">Exit fullscreen</span><span class="label--not-pressed plyr__tooltip" role="tooltip">Enter fullscreen</span></button>'
    },
    videoControls = `${videoEl.playButtonIcon}<div class="plyr__controls"> ${videoEl.playButton} ${videoEl.progressInput} ${videoEl.muteButton} ${videoEl.volume} ${videoEl.fullscreen}</div>`;
let videoPlayers = [],
    videosInRecommendedProductsPlayer;
window.PXUTheme.video = {
    init: function() {
        this.setupVideoPlayer()
    },
    setupVideoPlayer: function() {
        const e = document.querySelectorAll("[data-html5-video] video, [data-youtube-video]");
        let t = Plyr.setup(e, {
                controls: videoControls,
                ratio: this.aspect_ratio,
                fullscreen: {
                    enabled: !0,
                    fallback: !0,
                    iosNative: !0
                },
                storage: {
                    enabled: !1
                }
            }),
            o = $("[data-video-loop]").data("video-loop") || !1;
        $.each(t, function(e, t) {
            t.loop = o, videoPlayers.push(t)
        }), this.setupListeners()
    },
    setupListeners: function() {
        $.each(videoPlayers, function(e, t) {
            const o = t.id;
            let n;
            t.isHTML5 && (n = $(t.elements.wrapper).find("video")).attr("data-plyr-video-id", o), t.on("play", function(e) {
                var t = e.detail.plyr;
                $.each(videoPlayers, function(e, o) {
                    var n = o.id || o.media.dataset.plyrVideoId;
                    t.id != n && o.pause()
                })
            })
        })
    },
    enableVideoOnHover: function(e) {
        var t, o = e.find("[data-html5-video]"),
            n = e.find("[data-youtube-video]");
        o.length > 0 ? t = o.find("[data-plyr-video-id]").data("plyr-video-id") : n.length > 0 && (t = n.find("iframe").attr("id")), t && $.each(videoPlayers, function(e, o) {
            o.id != t && o.media.id != t || (o.toggleControls(!1), o.muted = !0, o.play())
        })
    },
    disableVideoOnHover: function(e) {
        var t, o = e.find("[data-html5-video]"),
            n = e.find("[data-youtube-video]");
        o.length > 0 ? t = o.find("[data-plyr-video-id]").data("plyr-video-id") : n.length > 0 && (t = n.find("iframe").attr("id")), t && $.each(videoPlayers, function(e, o) {
            o.id != t && o.media.id != t || o.playing && o.pause()
        })
    }
};